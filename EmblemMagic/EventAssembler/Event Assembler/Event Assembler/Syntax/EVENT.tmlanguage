<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>fileTypes</key>
  <array>
    <string>event</string>
  </array>
  <key>name</key>
    <string>EVENT</string>
  <key>foldingStartMarker</key>
    <string>^\s*/\*|^(?![^{]*?//|[^{]*?/\*(?!.*?\*/.*?\{)).*?\{\s*($|//|/\*(?!.*?\*/.*\S))</string>
  <key>foldingStopMarker</key>
    <string>^\s*\*/|^\s*\}</string>
  <key>patterns</key>
  <array>
    <dict>
      <key>include</key>
      <string>#comments</string>
    </dict>

    <dict>
      <key>match</key>
      <string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\b</string>
      <key>name</key>
      <string>constant.numeric.source.event</string>
    </dict>

    <dict>
      <key>match</key>
      <string>(\$[0-9a-fA-F]+)|\b[01]+b\b</string>
      <key>name</key>
      <string>constant.numeric.source.event</string>
    </dict>

    <dict>
      <key>begin</key>
      <string>"</string>
      <key>beginCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.begin.event</string>
        </dict>
      </dict>
      <key>end</key>
      <string>"</string>
      <key>endCaptures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.string.end.event</string>
        </dict>
      </dict>
      <key>name</key>
      <string>string.quoted.double.event</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#string_escaped_char</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#string_placeholder</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>begin</key>
      <string>(?x)
            ^\s*(\#define)\s+             # define
            ((?&lt;id&gt;[a-zA-Z_][a-zA-Z0-9_]*))  # macro name
            (?:                              # and optionally:
                (\()                         # an open parenthesis
                    (
                        \s* \g&lt;id&gt; \s*       # first argument
                        ((,) \s* \g&lt;id&gt; \s*)*  # additional arguments
                        (?:\.\.\.)?          # varargs ellipsis?
                    )
                (\))                         # a close parenthesis
            )?
          </string>
      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.control.import.define.event</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>entity.name.function.preprocessor.event</string>
        </dict>
        <key>4</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.parameters.event</string>
        </dict>
        <key>5</key>
        <dict>
          <key>name</key>
          <string>variable.parameter.preprocessor.event</string>
        </dict>
        <key>7</key>
        <dict>
          <key>name</key>
          <string>punctuation.separator.parameters.event</string>
        </dict>
        <key>8</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.parameters.event</string>
        </dict>
      </dict>
      <key>end</key>
      <string>(?=(?://|/\*))|$</string>
      <key>name</key>
      <string>meta.preprocessor.macro.event</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>(?&gt;\\\s*\n)</string>
          <key>name</key>
          <string>punctuation.separator.continuation.event</string>
        </dict>
        <dict>
          <key>include</key>
          <string>$base</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>begin</key>
      <string>^\s*(#include|#incext|#inctext|#incbin)\b\s+</string>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.control.import.include.event</string>
        </dict>
      </dict>
      <key>end</key>
      <string>(?=(?://|/\*))|$</string>
      <key>name</key>
      <string>meta.preprocessor.c.include</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>(?&gt;\\\s*\n)</string>
          <key>name</key>
          <string>punctuation.separator.continuation.event</string>
        </dict>
        <dict>
          <key>begin</key>
          <string>"</string>
          <key>beginCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.begin.event</string>
            </dict>
          </dict>
          <key>end</key>
          <string>"</string>
          <key>endCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.end.event</string>
            </dict>
          </dict>
          <key>name</key>
          <string>string.quoted.double.include.event</string>
        </dict>
        <dict>
          <key>begin</key>
          <string>&lt;</string>
          <key>beginCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.begin.event</string>
            </dict>
          </dict>
          <key>end</key>
          <string>&gt;</string>
          <key>endCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.string.end.event</string>
            </dict>
          </dict>
          <key>name</key>
          <string>string.quoted.other.lt-gt.include.event</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>begin</key>
      <string>^\s*(#define|#elif|#else|#if|#ifdef|#ifndef|#undef|#endif)\b</string>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.control.import.event</string>
        </dict>
      </dict>
      <key>end</key>
      <string>(?=(?://|/\*))|$</string>
      <key>name</key>
      <string>meta.preprocessor.event</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>(?&gt;\\\s*\n)</string>
          <key>name</key>
          <string>punctuation.separator.continuation.event</string>
        </dict>
      </array>
    </dict>

    <dict>
      <key>match</key>
      <string>(?x)
        ^\s*([A-Z_][A-Z_0-9]+)\b             # All uppercase at the start of a line
      </string>
      <key>captures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>support.function.any-method.event</string>
        </dict>
      </dict>
    </dict>

    <dict>
      <key>match</key>
      <string>(?x)
        ;\s*([A-Z_][A-Z_0-9]+)\b             # All uppercase at the start of a line
      </string>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>support.function.any-method.event</string>
        </dict>
      </dict>
    </dict>
  </array>
  
  <key>repository</key>
  <dict>
    <key>block</key>
    <dict>
      <key>begin</key>
      <string>\{</string>
      <key>end</key>
      <string>\}</string>
      <key>name</key>
      <string>meta.block.event</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>#block_innards</string>
        </dict>
      </array>
    </dict>
    <key>comments</key>
    <dict>
      <key>patterns</key>
      <array>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>meta.toc-list.banner.block.event</string>
            </dict>
          </dict>
          <key>match</key>
          <string>^/\* =(\s*.*?)\s*= \*/$\n?</string>
          <key>name</key>
          <string>comment.block.event</string>
        </dict>
        <dict>
          <key>begin</key>
          <string>/\*</string>
          <key>captures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.comment.event</string>
            </dict>
          </dict>
          <key>end</key>
          <string>\*/</string>
          <key>name</key>
          <string>comment.block.event</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\*/.*\n</string>
          <key>name</key>
          <string>invalid.illegal.stray-comment-end.event</string>
        </dict>
        <dict>
          <key>captures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>meta.toc-list.banner.line.event</string>
            </dict>
          </dict>
          <key>match</key>
          <string>^// =(\s*.*?)\s*=\s*$\n?</string>
          <key>name</key>
          <string>comment.line.banner.c++</string>
        </dict>
        <dict>
          <key>begin</key>
          <string>//</string>
          <key>beginCaptures</key>
          <dict>
            <key>0</key>
            <dict>
              <key>name</key>
              <string>punctuation.definition.comment.event</string>
            </dict>
          </dict>
          <key>end</key>
          <string>$\n?</string>
          <key>name</key>
          <string>comment.line.double-slash.c++</string>
          <key>patterns</key>
          <array>
            <dict>
              <key>match</key>
              <string>(?&gt;\\\s*\n)</string>
              <key>name</key>
              <string>punctuation.separator.continuation.c++</string>
            </dict>
          </array>
        </dict>
      </array>
    </dict>
  </dict>

  <key>scopeName</key>
  <string>source.event</string>
</dict>
</plist>