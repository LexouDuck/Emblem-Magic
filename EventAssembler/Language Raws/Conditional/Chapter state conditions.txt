##command:GOTO IF EventID: True
##Branches if the given Event ID is set as 'used'.
GOTO_IFET, 0x22, 12, -game:FE6 -indexMode:8
##The event ID to check.
	EventID, 4, 4
	Value, 8, 4

##command:GOTO IF EventID: False
##Branches if the given Event ID is not set as 'used'.
GOTO_IFEF, 0x23, 12, -game:FE6 -indexMode:8
##The event ID to check.
	EventID, 4, 4
	Value, 8, 4



##command:GOTO IF EventID: True
##Branches if the given Event ID is set as 'used'.
GOTO_IFET, 0x4C, 12, -game:FE7 -indexMode:8
	ConditionalID, 4, 2
##The event ID to check.
	EventID, 8, 2

##command:GOTO IF EventID: False
##Branches if the given Event ID is not set as 'used'.
GOTO_IFEF, 0x4D, 12, -game:FE7 -indexMode:8
	ConditionalID, 4, 2
##The event ID to check.
	EventID, 8, 2



##command:GOTO IF Not Hector Mode
##Branches if the game is not in Hector mode
GOTO_IFNHM, 0x4F, 8, -game:FE7 -indexMode:8
	ConditionalID, 4, 2

##command:GOTO IF Not Eliwood Mode
##Branches if the game is not in Eliwood mode
GOTO_IFNEM, 0x50, 8, -game:FE7 -indexMode:8
	ConditionalID, 4, 2

##command:GOTO IF 'No'
##Branches based on the previous conversation's
##Yes/No choice selected by the player.
GOTO_IFNO, 0x52, 8, -game:FE7 -indexMode:8
	ConditionalID, 4, 2

##command:GOTO IF 'Yes'
##Branches based on the previous conversation's
##Yes/No choice selected by the player.
GOTO_IFYES, 0x53, 8, -game:FE7 -indexMode:8
	ConditionalID, 4, 2

##command:GOTO IF Not TUTORIAL
##Branches if the game is not in tutorial mode
GOTO_IFNTUTORIAL, 0x54, 8, -game:FE7 -indexMode:8
	ConditionalID, 4, 2

##command:GOTO IF TUrn
##Branches if the current turn is greater than
##the turn number given in as parameter.
GOTO_IFTU, 0x56, 8, -game:FE7 -indexMode:8
	ConditionalID, 4, 2
##Turn to check.
	Turn, 2, 2, -preferredBase:10



##Checks if the given Event ID is set as 'used'.
##Setting the EventID parameter as 0xFFFF will
##check the Event ID associated with the current event.
##The result (0 or 1) is stored to memory slot 0xC.
CHECK_EVENTID, 0x0321, 4, -game:FE8 -indexMode:8
##The event ID to check.
	EventID, 2, 2

#Checks whether the (parameter)th bit is set in event execution bitfield.
#Stores 1 to MemorySlot 0xC if the bit is set, and stores 0 otherwise.
#Parameter cannot be higher than 0xF.
CHECK_EVBIT, 0x0320, 4, -game:FE8 -indexMode:8
##The bit index to check.
	Bit, 2, 2